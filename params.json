{
  "name": "Gravy",
  "tagline": "A delicious, omakase stack for the JVM powered by Groovy!",
  "body": "###Introduction\r\nGravy is a rapid application development framework that adopts left of center tools and enables developers to deliver code that is as elegant as the mainstream tools making the entire process a breeze.  \r\nThe tools that Gravy is based on are:  \r\n1.[Groovy](http://www.groovy-lang.org/) as the primary language.    \r\n2.[Google Guice](https://github.com/google/guice) as a DI mechanism.      \r\n3.[JOOQ](http://www.jooq.org/) for database operations.  \r\n4.[Spock](http://spockframework.github.io/spock/docs/1.0/index.html) as as testing f/w.  \r\n5.[Gradle](http://gradle.org/) as a build tool.   \r\n6.[Restlet](https://restlet.com/) as the API f/w.  \r\n\r\nGravy glues all of it together elegantly and abstracts away some of the learnings in real world projects that the maintainers have had to present you with a toolbelt that is as delicious as it looks!\r\n\r\n###Special Mentions\r\nGravy would not have been possible but for the existence of [Restling](https://github.com/RobertFischer/Restling) a f/w curated by @RobertFischer.\r\nRequest you all to check it out.\r\n\r\n### Motivation\r\nWeb development in Java has long been dominated by a certain segment of tools for specific use.(A certain DI f/w,a certain ORM f/w,a certain testing f/w and so on).Nothing wrong with them but majority of the developers use this without understanding how it works.This is akin to a magician believing in his own tricks and this can't possibly yield any good.\r\nGravy is a framework that has been designed to enable developers to break away from this tunnel vision and present a toolset that enables developers to witness the magic that happens at their hands.  \r\nOn top of it ,Gravy seamlessly integrates with other f/w in the ecosystem without any hassle.  \r\nWe hope you will love using the f/w as much as we have had fun developing it.  \r\n\r\n###Pre-Requisites:  \r\n1.you just need a  JDK_8 installed.  \r\n###Installation:    \r\n1.Download the latest version from here. \r\n\r\n2.Unzip the distribution to your favourite location.   \r\n\r\n3.set the `$GRAVY_HOME` variable to where you have unzipped the above distro.  \r\n\r\n4.Modify your path variable to `$PATH:$GRAVY_HOME/bin`.  \r\n\r\n5.You are set!\r\n\r\n###Usage  \r\n1.Go to any directory where you want to bootstrap a new project.   \r\n \r\n2.Run `gravy cook <com.your_groupId> <your_project_name>`.    \r\n\r\n3.After Gravy finishes bootstrapping it up you will find a new folder with `<your_project_name>` created.  \r\n\r\n4.CD into that location and run `./gradlew clean appRun`.    \r\n\r\n5.At this point of time your application should come up at  `http://localhost:8080`.    \r\n\r\n6.To verify everything works hit the following URL `http://localhost:8080/meta/ping` .It should return `PONG` as response.  \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n### Authors and Contributors\r\nMaintained by  \r\n@kaddiya   \r\n@sudarshan-webonise  \r\n@ameyawebonise   \r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}